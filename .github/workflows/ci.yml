name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-server:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
    
    - name: Install server dependencies
      run: |
        cd server
        npm ci
    
    - name: Run server tests
      run: |
        cd server
        npm test
    
    - name: Run server linting
      run: |
        cd server
        npm run lint || echo "No lint script found"
    
    - name: Run security audit
      run: |
        cd server
        npm audit --audit-level=high

  test-client:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
    
    - name: Install client dependencies
      run: |
        cd client
        npm ci
    
    - name: Run client tests
      run: |
        cd client
        npm test -- --coverage --watchAll=false
    
    - name: Build client
      run: |
        cd client
        npm run build
    
    - name: Run security audit
      run: |
        cd client
        npm audit --audit-level=high

  build-and-deploy:
    needs: [test-server, test-client]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        cd server && npm ci
        cd ../client && npm ci
    
    - name: Build application
      run: |
        cd client
        npm run build
    
    - name: Deploy to production
      run: |
        echo "Deployment would happen here"
        echo "Consider using services like:"
        echo "- Heroku for backend"
        echo "- Vercel/Netlify for frontend"
        echo "- AWS/DigitalOcean for full stack"
